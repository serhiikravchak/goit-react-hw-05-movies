{"version":3,"file":"static/js/387.a57d0968.chunk.js","mappings":"iTAEaA,EAAiBC,EAAAA,EAAAA,QAAH,sBAEdC,EAAcD,EAAAA,EAAAA,GAAH,sBAEXE,EAASF,EAAAA,EAAAA,GAAH,gDAING,EAASH,EAAAA,EAAAA,EAAH,qEAKNI,EAAUJ,EAAAA,EAAAA,EAAH,sBAEPK,EAAiBL,EAAAA,EAAAA,EAAH,6C,kBCJdM,EAAU,WACrB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAEKC,EAAAA,GAAoBJ,GAFzB,OAEhBF,EAFgB,OAGtBC,EAAgBD,EAAaO,SAHP,gDAKtBC,EAAAA,GAAAA,MAAA,yCALsB,yDAAH,qDAQvBH,GACD,GAAE,CAACH,IAGFF,IACE,SAACT,EAAD,UACGS,EAAaS,OAAS,GACrB,SAAChB,EAAD,UACGO,EAAaU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAAClB,EAAD,YACE,UAACC,EAAD,sBAAiBgB,MACjB,SAACf,EAAD,UAAUgB,MAFCV,EADG,OAQpB,SAACL,EAAD,wDAOT,EAED,G,+LCjDMgB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACND,EAAAA,EAAAA,IAAA,qCAAwCD,IADlC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACAL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FM,IAD7F,cACjBH,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKXG,EAAe,mCAAG,WAAMlB,GAAN,uFACLY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,oBAAiCW,EAAjC,oBADK,cACtBG,EADsB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfI,EAAe,mCAAG,WAAMnB,GAAN,uFACJY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAAyCW,EAAzC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfK,EAAe,mCAAG,WAAMpB,GAAN,uFACJY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,4BAAyCW,EAAzC,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsSection = styled.section``;\n\nexport const ReviewsList = styled.ul``;\n\nexport const Review = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 5px;\n  font-weight: bold;\n`;\n\nexport const Content = styled.p``;\n\nexport const ReviewNotFound = styled.p`\n  color: orangered;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport {\n  ReviewsSection,\n  ReviewsList,\n  Review,\n  Author,\n  Content,\n  ReviewNotFound,\n} from './Reviews.styled';\nimport * as API from '../../services/api';\n\nexport const Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await API.getMovieReviews(id);\n        setMovieReviews(movieReviews.results);\n      } catch (error) {\n        toast.error(`Oops something went wrong, try again.`);\n      }\n    };\n    fetchMovieReviews();\n  }, [id]);\n\n  return (\n    movieReviews && (\n      <ReviewsSection>\n        {movieReviews.length > 0 ? (\n          <ReviewsList>\n            {movieReviews.map(({ id, author, content }) => (\n              <Review key={id}>\n                <Author>Author: {author}</Author>\n                <Content>{content}</Content>\n              </Review>\n            ))}\n          </ReviewsList>\n        ) : (\n          <ReviewNotFound>\n            We don`t have any reviews for this movie\n          </ReviewNotFound>\n        )}\n      </ReviewsSection>\n    )\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst API_KEY = '27a76f0869afd59eafccef7d6d986c20';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data;\n}\n\nexport const getMovieDetails = async id => {\n   const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["ReviewsSection","styled","ReviewsList","Review","Author","Content","ReviewNotFound","Reviews","useState","movieReviews","setMovieReviews","id","useParams","useEffect","fetchMovieReviews","API","results","toast","length","map","author","content","API_KEY","axios","getTrendingMovies","response","data","searchMovie","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}