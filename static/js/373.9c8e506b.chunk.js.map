{"version":3,"file":"static/js/373.9c8e506b.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main``;\n\nexport const Box = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 200px;\n  margin-right: 20px;\n`;\n\nexport const MovieCredits = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const OverviewContent = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const GenresContent = styled.p``;\n\nexport const AdditionalInfo = styled.div``;\n\nexport const AdditionalInfoList = styled.ul``;\n\nexport const AdditionalInfoTitle = styled.h3``;\n\nexport const AdditionalInfoItem = styled.li`\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport {\n  Main,\n  Box,\n  MoviePoster,\n  MovieCredits,\n  Title,\n  UserScore,\n  Overview,\n  OverviewContent,\n  Genres,\n  GenresContent,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n} from './MovieDetails.styled';\nimport * as API from '../../services/api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await API.getMovieDetails(id);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        toast.error(`Oops something went wrong, try again.`);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  return (\n    <Main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Box>\n        <MoviePoster\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.Title}\n        />\n        <MovieCredits>\n          <Title>{movieDetails.title}</Title>\n          <UserScore>\n            User score: {Math.round(movieDetails.vote_average * 10)}%\n          </UserScore>\n          <Overview>Overview</Overview>\n          <OverviewContent>{movieDetails.overview}</OverviewContent>\n          <Genres>Genres</Genres>\n          <GenresContent>\n            {movieDetails.genres.map(genre => genre.name).join(', ')}\n          </GenresContent>\n        </MovieCredits>\n      </Box>\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <AdditionalInfoList>\n          <AdditionalInfoItem>\n            <Link to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </Link>\n          </AdditionalInfoItem>\n          <AdditionalInfoItem>\n            <Link to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </Link>\n          </AdditionalInfoItem>\n        </AdditionalInfoList>\n          </AdditionalInfo>\n          <Outlet/>\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst API_KEY = '27a76f0869afd59eafccef7d6d986c20';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data;\n}\n\nexport const getMovieDetails = async id => {\n   const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Main","Box","MoviePoster","MovieCredits","Title","UserScore","Overview","OverviewContent","Genres","GenresContent","AdditionalInfo","AdditionalInfoList","AdditionalInfoTitle","AdditionalInfoItem","useState","movieDetails","setMovieDetails","id","useParams","location","useLocation","backLinkHref","state","from","useEffect","fetchMovieDetails","API","toast","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","API_KEY","axios","getTrendingMovies","response","data","searchMovie","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}