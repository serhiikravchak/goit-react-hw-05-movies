{"version":3,"file":"static/js/644.8e54a0f6.chunk.js","mappings":"8RAEaA,EAAaC,EAAAA,EAAAA,KAAH,oPAYVC,EAAQD,EAAAA,EAAAA,MAAH,0PAeLE,EAASF,EAAAA,EAAAA,OAAH,gcAkBNG,EAAcH,EAAAA,EAAAA,KAAH,6M,SC9CXI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,UAACN,EAAD,CAAYM,SAAUA,EAAtB,WACE,SAACJ,EAAD,CACEK,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACR,EAAD,WACE,SAACC,EAAD,yBAMP,EChBYQ,EAAOX,EAAAA,EAAAA,KAAH,iGAMJY,EAAYZ,EAAAA,EAAAA,GAAH,sBAETa,EAAYb,EAAAA,EAAAA,GAAH,gD,SCsDtB,EAzDe,WACb,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAYJ,EAAaK,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAgB,mCAAG,6GAEDC,EAAAA,GAAgBJ,GAFf,UAIM,KAFrBK,EAFe,QAIXC,aAJW,uBAKnBC,EAAAA,GAAAA,KAAW,2CALQ,0BAQrBb,EAAUW,EAAMG,SARK,kDAUrBD,EAAAA,GAAAA,MAAA,yCAVqB,0DAAH,qDActBJ,GAhBsB,CAiBvB,GAAE,CAACH,IAcJ,OACE,UAACX,EAAD,YACE,SAACP,EAAD,CAAWC,SAdM,SAAA0B,GACnBA,EAAIC,iBAGkC,KAAlCD,EAAIE,OAAOC,MAAMC,MAAMC,QAI3BjB,EAAgB,CAAEe,MAAOH,EAAIE,OAAOC,MAAMC,QAC1CJ,EAAIE,OAAOC,MAAMC,MAAQ,IAJvBN,EAAAA,GAAAA,KAAW,gCAKd,IAKId,IACC,SAACH,EAAD,UACGG,EAAOsB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC1B,EAAD,WACE,SAAC,KAAD,CAAM2B,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMtB,GAAlC,SACGmB,KAFWD,EADN,QAWrB,C,+LC3DKK,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACND,EAAAA,EAAAA,IAAA,qCAAwCD,IADlC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMd,GAAN,uFACAU,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,4DAA6FT,IAD7F,cACjBY,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKXE,EAAe,mCAAG,WAAMX,GAAN,uFACLM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCK,EAAjC,oBADK,cACtBG,EADsB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfG,EAAe,mCAAG,WAAMZ,GAAN,uFACJM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCK,EAAzC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfI,EAAe,mCAAG,WAAMb,GAAN,uFACJM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCK,EAAzC,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  max-width: 320px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid grey;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 15px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 13px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  background-image: url('https://uxwing.com/wp-content/themes/uxwing/download/user-interface/search-icon.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;","import { SearchForm, Input, Button, ButtonLabel } from './SearchBox.styled';\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <Input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <Button>\n        <ButtonLabel>\n          Search\n        </ButtonLabel>\n      </Button>\n    </SearchForm>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const MovieList = styled.ul``;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Main, MovieList, MovieItem } from './Movies.styled';\nimport * as API from '../../services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    const fetchSearchMovie = async () => {\n      try {\n        const movie = await API.searchMovie(movieName);\n\n        if (movie.total_result === 0) {\n          toast.warn('Your search did not return any results.');\n          return;\n        }\n        setMovies(movie.results);\n      } catch (error) {\n        toast.error(`Oops something went wrong, try again.`);\n      }\n    };\n\n    fetchSearchMovie();\n  }, [movieName]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n   \n\n    if (evt.target.query.value.trim() === '') {\n      toast.warn('Search field mustn`t be empty');\n      return;\n    }\n    setSearchParams({ query: evt.target.query.value });\n    evt.target.query.value = ''\n  };\n\n  return (\n    <Main>\n      <SearchBox onSubmit={handleSubmit} />\n      {movies && (\n        <MovieList>\n          {movies.map(({ id, title }) => (\n            <MovieItem key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </Main>\n  );\n};\n\n\nexport default Movies","import axios from \"axios\";\n\nconst API_KEY = '27a76f0869afd59eafccef7d6d986c20';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const searchMovie = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`);\n    return response.data;\n}\n\nexport const getMovieDetails = async id => {\n   const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data;\n}\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n}\n\n"],"names":["SearchForm","styled","Input","Button","ButtonLabel","SearchBox","onSubmit","name","type","autoComplete","autoFocus","placeholder","Main","MovieList","MovieItem","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","useEffect","fetchSearchMovie","API","movie","total_result","toast","results","evt","preventDefault","target","query","value","trim","map","id","title","to","state","from","API_KEY","axios","getTrendingMovies","response","data","searchMovie","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}